# Default configuration for Endless image builds

[build]
# The build section is primarily populated by the image builder based on
# the parameters it is run with. Commented options are here for
# reference with their defaults and should not be changed in the
# configuration.

# The primary image variant properties.
#product =
#branch =
#arch =
#platform =
#personality =

# Build modes
#dry_run = false

# Whether the production ostree repo should be used
#use_production_ostree = false

# The Endless major release series. For master this is master, but for
# stable branches like eos3.9 this would be eos3.
#series =

# Generated attributes
#build_version =

# Paths managed by the builder
#srcdir = /path/to/eos-image-builder
#cachedir = /var/cache/eos-image-builder
#sysconfdir = /etc/eos-image-builder

# Local settings paths corresponding to the --localdir option. These will
# not be set if no directory is provided.
#localdir =
#localdatadir = ${localdir}/data

# Various paths and settings
datadir = ${srcdir}/data
helpersdir = ${srcdir}/helpers
tmpdir = ${cachedir}/tmp
contentdir = ${cachedir}/content
outdir = ${tmpdir}/out
outversion = ${product}-${branch}-${arch}-${platform}.${build_version}.${personality}
tmpconfig = ${tmpdir}/config.ini
tmpfullconfig = ${tmpdir}/fullconfig.ini
baselib = ${srcdir}/lib/eib.sh
ssh_options = -i ${sysconfdir}/ssh-key.pem -o StrictHostKeyChecking=no
keyring = ${tmpdir}/eib-keyring.gpg
manifestdir = ${tmpdir}/manifest

[buildroot]
# Directories to mount in the buildroot
mounts_add =

# Debian package repository setup for the buildroot
repo =  https://deb.endlessos.org/debian
arch = ${build:arch}
codename = ${build:branch}
components = core endless

# Debian release to base on
base = bullseye

# Packages to install in the buildroot
packages_add =
  attr
  awscli
  ca-certificates
  coreutils
  cpio
  curl
  dbus-user-session
  dpkg-dev
  endless-ca-cert
  eos-keyring
  eos-tech-support
  exfat-fuse
  exfat-utils
  fdisk
  flatpak
  gir1.2-flatpak-1.0
  gir1.2-glib-2.0
  gir1.2-ostree-1.0
  git
  gnupg
  json-glib-tools
  jq
  libfsapfs-utils
  mount
  openssh-client
  ostree
  p7zip-full
  parted
  pigz
  python3
  python3-apt
  python3-gi
  python3-requests
  python3-venv
  rsync
  udev
  util-linux
  unzip
  wget
  xz-utils

# Apt archive cache directory
aptcache_dir = ${build:contentdir}/archives

# Apt archive cache maximum size in bytes (default 2 GB)
aptcache_max_size = 2147483648

[content]
# Merged customization hooks to run.
hooks_add =
  50-flatpak
  50-gnome-software-cache

[image]
# Merged customization hooks to run.
hooks_add =
  40-flatpak-setup.chroot
  50-branding-background
  50-branding-desktop
  50-branding-fbe
  50-flatpak.chroot
  50-language
  50-locales
  50-timezone
  50-update-done-stamp
  50-reclaim-swap-stamp
  50-gnome-software-cache
  50-eos-dir-mode-700
  50-xkb-layout.chroot
  60-dconf-prepare
  60-flatpak-autoinstall-counters.chroot
  60-kolibri-content
  61-dconf-compile.chroot
  61-kolibri-content-install
  63-icon-grid
  70-flatpak-manifest
  70-ostree-manifest
  80-ldconfig-aux-cache.chroot

# Gzip compression by default (valid choices: gz or xz)
compression = gz

# Whether the root filesystem should be resized on first boot or not
rootfs_resize = true

# Don't create split images by default, as this is only used
# with specific Endless devices
split = false

# Split disk image sizes in bytes. By default, disk1 and disk2 are 16 GB
# (16 * 10**9, not 16 * 2**30). Single disk images are currently made to
# whatever size the content dictates.
disk1_size = 16000000000
disk2_size = 16000000000

# Create boot.zip by default
boot_zip = true

# Don't build ISOs by default
iso = false

# Don't build USB images by default
usb = false

# Don't build VM images by default
# This setting only works for arch=amd64, for all other values this is a no-op
# (please also add the comment above to anywhere 'vm_image' is changed)
vm_image = false

# GPG private key ID for signing images. If this is left blank, detached
# signatures will not be created.
signing_keyid =

# Image uploading
upload_api_host =
upload_api_url_root = http://${upload_api_host}
user = uploader
path = /srv/images/www
destdir = ${path}/${publish:path}

# Image downloading
download_host = images-dl.endlessm.com
download_url_root = http://${download_host}
download_url = ${download_url_root}/${publish:path}

# Add preloaded content in /var/lib/kalite
# The variant consists mainly between 2 alternatives: endless and resized:
# the 'endless' variant is the previous content that was shipped in the
# images, and 'resized' is all the content available on that specific language
# with reduced quality.
kalite_content = false
kalite_content_host = s3://ka-lite.endlessm.com
kalite_content_user = uploader
kalite_content_variant = endless
kalite_content_version = 0.16

# Product name for ISO labels, etc
product_name = Endless OS

# Default language (locale)
language =

# Default Keyboard Layout
xkb_layout =

# Default timezone
timezone =

# dconf overrides. Each of the elements of this list should be a keyfile in the
# format explained at https://wiki.gnome.org/Projects/dconf/SystemAdministrators
settings_add =

# dconf keys to lock
settings_locks_add =

# Hostname, to be used from the IMAGE hook 50-hostname.
# It might override values set by the OSTree builder.
hostname =

# Base URL to download chrome plugins from, to be used from the IMAGE hook
# 50-chrome-plugins-updater-url. It might override values set by the OSTree builder.
chrome_plugins_base_URL =

# Chromium policies override files
chromium_policies = false
chromium_policies_managed =
chromium_policies_recommended =

# Default partition table
partition_table = gpt

# Desktop icon grid overrides
icon_grid_add =

# Brand-specific configuration and assets for the Desktop
branding_desktop_config =
branding_desktop_logo =

# Brand-specific configuration for the First Boot Experience
branding_fbe_config = ${build:datadir}/branding/gnome-initial-setup/default/gnome-initial-setup.conf

# Environment variables to substitute in branding configuration files
branding_subst_vars_add =

[kolibri]
app_version = 0.14.7
app_desktop_xdg_plugin_version = 1.0.8

automatic_provision = true
automatic_provision_facility_name = Endless
automatic_provision_superuser_name =
automatic_provision_superuser_password =
automatic_provision_preset = nonformal
automatic_provision_landing_page = learn

# Preloaded Kolibri channels
# install_channels =
#   # How to get started with Kolibri on Endless OS
#   e8a879742b2249a0a4b890f9903916f7

# Kolibri content configuration
#
# Each kolibri-<channel> section corresponds to a channel listed in the
# install_channels option in the kolibri section. These sections are
# optional. By default, all content from a channel will be included.
#
# include_node_ids - List of content node IDs to include. If this is not set,
#   all content from the channel will be included.
# exclude_node_ids - A list of content node IDs to exclude. Use this to
#   exclude content nested beneath content nodes that are being included.
#
# Example:
#
# [kolibri-e8a879742b2249a0a4b890f9903916f7]
# include_node_ids =
#   # English [topic]
#   3b909a18242c48208dbc49d06bc48162
# exclude_node_ids =
#   # Kolibri 0.12.2 User Guide for Admins [document]
#   5bb37c1832c8489ab2940f31588305f6

[kolibri-e8a879742b2249a0a4b890f9903916f7]
include_node_ids =
  # English [topic]
  3b909a18242c48208dbc49d06bc48162

[usb]
size = 16000000000
free_space = 1000
live_image = true

[split]
# Merged customization hooks to run.
# For now, omit the upstream content (gnome runtime) to fit on SD card.
hooks_add =
  20-flatpak-prep-disk2
  30-flatpak-clean-disk1.chroot
  50-eos-setup-flatpak-extension-dir-extra.chroot
  50-flatpak.chroot
  70-flatpak-manifest

[ostree]
# Repository setup. By default the remote, remote repo and OS name are
# all named eos.
product = ${build:product}
platform = ${build:platform}
branch = ${build:branch}
ref = os/${product}/${platform}/${branch}
repo = eos
os = eos
remote = eos

# Multiple stable minor version branches may be in use, but the deployed
# ostree configuration should use only the major version. E.g., the real
# branch may be eos2.2, but the deployed configuration should use eos2.
stable_branch = ${build:series}
ref_deploy = os/${product}/${platform}/${stable_branch}

# Builder directories
repodir = ${build:contentdir}/ostree/${repo}
checkout = ${build:tmpdir}/ostree-co

# OSTree server base URL. Separate pull and deploy URLs in case there's
# a more preferred source for the build. This is primarily for Endless
# usage where our builders are in the same datacenter as the OSTree
# server and can benefit from a direct route. By default these are the
# same.
deploy_server_url = https://ostree.endlessm.com
pull_server_url = ${deploy_server_url}

# Production OSTree repos
prod_repo_path = /ostree
prod_deploy_repo_url = ${deploy_server_url}${prod_repo_path}
prod_pull_repo_url = ${pull_server_url}${prod_repo_path}

# Development OSTree repos
dev_repo_path = /staging/dev
dev_deploy_repo_url = ${deploy_server_url}${dev_repo_path}
dev_pull_repo_url = ${pull_server_url}${dev_repo_path}

# The ostree OS remote URL that the final system will query for updates.
# Note that this points to the production repos by default so that
# images are ready for release with the correct remote URL. This is not
# used during builds.
deploy_url = ${prod_deploy_repo_url}/${repo}

# The ostree OS remote URL that's used for pulling the OS during the
# build. For production ostree builds, the prod repo path is used, so 2
# URLs are defined and selected during the build in eib_ostree.
prod_pull_url = ${prod_pull_repo_url}/${repo}
dev_pull_url = ${dev_pull_repo_url}/${repo}

# Enable P2P OS updates
enable_p2p_updates = true

[manifest]
# Merged customization hooks to run.
hooks_add =

[publish]
# Merged customization hooks to run.
hooks_add =
  40-build-log
  42-sha256sums
  45-publish-s3
  50-publish

# Remote path to publish output directory to
path = nightly/${build:product}-${build:arch}-${build:platform}/${build:branch}/${build:personality}/${build:build_version}

# AWS S3 bucket to publish images to
s3_bucket =
s3_region =

[error]
# Merged customization hooks to run.
hooks_add =

[jenkins]
# Jenkins triggering
enable = false
url = https://ci.endlessm-sf.com
user =
token =

[flatpak]
# Switch to allow disabling flatpak on some products
enable = true

# Flatpak architecture. This is different from debian style arch used
# for the build. E.g, the build uses amd64 while flatpak uses x86_64.
# Normally this is not required as the default flatpak architecture will
# be correct.
arch =

# Locales to use when pulling runtimes
locales_add = ar be bn en es fr hu id ko pt ro ru sr uk zh
locales_del =

# Opt-in to set previously values on locales_add as the
# xa.extra-languages key on the flatpak [core] file. These values
# can be either languages (eg. en, pt), or full locales
# (eg. en_GB, az_AZ@latin, uz_UZ.utf8@cyrillic)
set_extra_languages = false

# Enable P2P app updates
enable_p2p_updates = true

# Flatpak installation configuration
#
# Each flatpak-remote-<name> section corresponds to a Flatpak remote.
# The string used for <name> becomes the remote name. The following
# options are supported:
#
# url - The remote URL to install flatpaks from
# enable (optional) - Boolean controlling whether the remote should be
#   used. Defaults to true when not specified.
# deploy_url (optional) - The URL to change the remote to for
#   deployment. Primarily this is for Endless repos where we want to
#   install from a dev repo but configure the image to pull from the
#   prod repo.
# apps - List of Flatpak apps required for installation.
# runtimes - List of Flatpak runtimes required for installation.
# nosplit_apps - List of Flatpak apps pruned from split images.
# nosplit_runtimes - List of Flatpak runtimes pruned from split images.
# exclude - List of Flatpak names to exclude from images.
# allow_extra_data - List of Flatpak names with extra data to allow in images.
# title (optional) - A title for the remote.
# default_branch (optional) - The default branch to use for installs.
#   This affects installs during the image build as well as at runtime.
#   Flatpaks that do not specify a branch will use this by default.
#
# Additionally, a URL or path for a flatpakrepo file can be specified in
# the repo_file option. The Url, Title, DefaultBranch and GPGKey keys
# are supported within that file. See flatpak-flatpakrepo(5) for
# details. This is also the only way that a remote-specific GPG key (not
# needed for Endless repos) can be specified. Note that the above config
# options take precedence over associated keys in the flatpakrepo file.
#
# The apps, runtimes, nosplit_apps and nosplit_runtimes options are all
# merged, so they support the typical _add_/_del_ scheme.
[flatpak-remote-eos-apps]
url = ${ostree:prod_pull_repo_url}/eos-apps
deploy_url = ${ostree:prod_deploy_repo_url}/eos-apps
default_branch = ${build:series}
apps_add =
  com.endlessm.finance
  com.endlessm.resume

[flatpak-remote-eos-runtimes]
url = ${ostree:prod_pull_repo_url}/eos
deploy_url = ${ostree:prod_deploy_repo_url}/eos

[flatpak-remote-eos-sdk]
url = ${ostree:prod_pull_repo_url}/eos-sdk
deploy_url = ${ostree:prod_deploy_repo_url}/eos-sdk
default_branch = stable
apps_add_mandatory =
  com.endlessm.EknServicesMultiplexer

[flatpak-remote-flathub]
repo_file = https://dl.flathub.org/repo/flathub.flatpakrepo
apps_add_mandatory =
  com.hack_computer.Clubhouse
  com.hack_computer.OperatingSystemApp
  com.hack_computer.Sidetrack
  org.chromium.Chromium
  org.gnome.Cheese
  org.gnome.Rhythmbox3
  org.gnome.Totem
  org.libreoffice.LibreOffice
apps_add =
  cc.arduino.arduinoide
  com.endlessm.photos
  com.endlessnetwork.aqueducts
  com.endlessnetwork.dragonsapprentice
  com.endlessnetwork.fablemaker
  com.endlessnetwork.frogsquash
  com.endlessnetwork.MidnightmareTeddy
  com.endlessnetwork.missilemath
  com.endlessnetwork.passage
  com.endlessnetwork.tankwarriors
  com.endlessnetwork.whitehouse
  com.tux4kids.tuxmath
  com.tux4kids.tuxtype
  edu.mit.Scratch
  io.lmms.LMMS
  io.thp.numptyphysics
  org.audacityteam.Audacity
  org.blender.Blender
  org.gimp.GIMP
  org.gnome.Gnote
  org.gnome.Weather
  org.inkscape.Inkscape
  org.kde.gcompris
  org.laptop.TurtleArtActivity
  org.learningequality.Kolibri
  org.pitivi.Pitivi
  org.tuxpaint.Tuxpaint

# Convenience variable primarily for other configurations to add or
# delete runtimes from the default set
runtimes_add =

# List of IDs (apps, runtimes or extensions) to never install
exclude_add =
  com.github.JannikHv.Gydl
  com.github.needleandthread.vocal
  com.obsproject.Studio
  com.spotify.Client
  com.uploadedlobster.peek
  com.vinszent.GnomeTwitch
  de.haeckerfelix.gradio
  io.atom.Atom
  io.github.GnomeMpv
  io.github.jliljebl.Flowblade
  net.mediaarea.QCTools
  org.audacityteam.Audacity.Codecs
  org.blender.Blender.Codecs
  org.chromium.Chromium.Codecs
  org.freedesktop.Platform.ffmpeg
  org.freedesktop.Platform.ffmpeg-full
  org.freedesktop.Platform.html5-codecs
  org.freedesktop.Platform.openh264
  org.gnome.Totem.Codecs
  org.kde.kdenlive
  org.kde.krita
  org.pitivi.Pitivi.Codecs
  org.telegram.desktop
  org.tordini.flavio.Minitube
  org.videolan.VLC

# List of IDs with extra data (apps, runtimes or extensions) to allow
allow_extra_data_add =
  # We are allowed to distribute up to 100,000 H.264 decoders per year,
  # so we only want to install the Cisco OpenH264 extension for specific
  # configurations. Those configurations need to explicitly remove
  # org.freedesktop.Platform.openh264 from the exclude list.
  #
  # https://phabricator.endlessm.com/T27888
  org.freedesktop.Platform.openh264
